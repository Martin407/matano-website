"use strict";(self.webpackChunk_matano_website=self.webpackChunk_matano_website||[]).push([[5225],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>g});var r=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?l(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function n(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)o=l[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)o=l[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var u=r.createContext({}),i=function(e){var t=r.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},c=function(e){var t=i(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=n(e,["components","mdxType","originalType","parentName"]),m=i(o),g=a,d=m["".concat(u,".").concat(g)]||m[g]||p[g]||l;return o?r.createElement(d,s(s({ref:t},c),{},{components:o})):r.createElement(d,s({ref:t},c))}));function g(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=o.length,s=new Array(l);s[0]=m;var n={};for(var u in t)hasOwnProperty.call(t,u)&&(n[u]=t[u]);n.originalType=e,n.mdxType="string"==typeof e?e:a,s[1]=n;for(var i=2;i<l;i++)s[i]=o[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},33868:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>i});var r=o(87462),a=(o(67294),o(3905));const l={title:"AWS Route53 Resolver Logs",sidebar_label:"AWS Route53",sidebar_position:5},s=void 0,n={unversionedId:"log-sources/managed-log-sources/aws/route53-resolver-logs",id:"log-sources/managed-log-sources/aws/route53-resolver-logs",title:"AWS Route53 Resolver Logs",description:"The AWS Route53 Resolver Logs Matano managed log source lets you ingest DNS logs for queries & responses from:",source:"@site/docs/log-sources/managed-log-sources/aws/route53-resolver-logs.md",sourceDirName:"log-sources/managed-log-sources/aws",slug:"/log-sources/managed-log-sources/aws/route53-resolver-logs",permalink:"/docs/log-sources/managed-log-sources/aws/route53-resolver-logs",draft:!1,editUrl:"https://github.com/matanolabs/matano-website/tree/main/website/docs/log-sources/managed-log-sources/aws/route53-resolver-logs.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"AWS Route53 Resolver Logs",sidebar_label:"AWS Route53",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"AWS ELB",permalink:"/docs/log-sources/managed-log-sources/aws/aws-elb"},next:{title:"Crowdstrike",permalink:"/docs/log-sources/managed-log-sources/crowdstrike/"}},u={},i=[{value:"Usage",id:"usage",level:2},{value:"Tables",id:"tables",level:2},{value:"Ingest",id:"ingest",level:2},{value:"S3 (default)",id:"s3-default",level:3},{value:"S3 Path scheme to table:",id:"s3-path-scheme-to-table",level:4},{value:"Schema",id:"schema",level:2}],c={toc:i};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The AWS Route53 Resolver Logs Matano managed log source lets you ingest DNS logs for queries & responses from: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Queries that originate in Amazon Virtual Private Cloud VPCs that you specify, as well as the responses to those DNS queries."),(0,a.kt)("li",{parentName:"ul"},"Queries from on-premises resources that use an inbound Resolver endpoint."),(0,a.kt)("li",{parentName:"ul"},"Queries that use an outbound Resolver endpoint for recursive DNS resolution."),(0,a.kt)("li",{parentName:"ul"},"Queries that use Route 53 Resolver DNS Firewall rules to block, allow, or monitor domain lists.")),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-query-logs.html"},"AWS Route53 Docs")," for more information."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Use the managed log source by specifying the ",(0,a.kt)("inlineCode",{parentName:"p"},"managed.type")," property in your ",(0,a.kt)("inlineCode",{parentName:"p"},"log_source.yml")," configuration file as ",(0,a.kt)("inlineCode",{parentName:"p"},"AWS_ROUTE53_RESOLVER_LOGS"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'name: "aws_route53_resolver_logs"\n\nmanaged:\n  type: "AWS_ROUTE53_RESOLVER_LOGS"\n')),(0,a.kt)("p",null,"For example, if you want to ingest AWS Route53 Resolver Logs (default table) may structure your log source under a subdirectory called ",(0,a.kt)("inlineCode",{parentName:"p"},"aws_route53")," (for short) as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"my-matano-dir/\n\u2514\u2500\u2500 log_sources/\n    \u2514\u2500\u2500 aws_route53_resolver_logs/\n        \u2514\u2500\u2500 log_source.yml\n")),(0,a.kt)("p",null,"For a complete reference on configuring log sources, including extending the table schema, see ",(0,a.kt)("a",{parentName:"p",href:"/docs/log-sources/configuration"},(0,a.kt)("em",{parentName:"a"},"Log source configuration")),"."),(0,a.kt)("h2",{id:"tables"},"Tables"),(0,a.kt)("p",null,"The AWS Route53 Resolver Logs managed log source supports the following tables:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"default (aws_route53_resolver_logs)")),(0,a.kt)("h2",{id:"ingest"},"Ingest"),(0,a.kt)("h3",{id:"s3-default"},"S3 (default)"),(0,a.kt)("p",null,"For a log source named ",(0,a.kt)("inlineCode",{parentName:"p"},"aws_route53_resolver_logs"),", a file under the path ",(0,a.kt)("inlineCode",{parentName:"p"},"aws_route53_resolver_logs/afe3c55a-8b05-4ac7-be76-b6fda08af95d/file.log.gz")," will be routed to the ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," table."),(0,a.kt)("h4",{id:"s3-path-scheme-to-table"},"S3 Path scheme to table:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"*")," (all) -> ",(0,a.kt)("strong",{parentName:"li"},"default"))),(0,a.kt)("h2",{id:"schema"},"Schema"),(0,a.kt)("p",null,"AWS Route53 Resolver Logs data is normalized to ECS fields. You can view the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/matanolabs/matano/blob/main/data/managed/log_sources/aws_route53_resolver_logs/log_source.yml"},"complete mappings")," to see the full schema."))}p.isMDXComponent=!0}}]);