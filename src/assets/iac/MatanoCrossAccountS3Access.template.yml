Parameters:
  MatanoMasterAccountId:
    Type: String
  ForceUpdate:
    Type: String
    Default: placeholder
  BucketName01:
    Type: String
    Default: ""
  BucketName02:
    Type: String
    Default: ""
  BucketName03:
    Type: String
    Default: ""
  BucketName04:
    Type: String
    Default: ""
  BucketName05:
    Type: String
    Default: ""
  BucketName06:
    Type: String
    Default: ""
  BucketName07:
    Type: String
    Default: ""
  BucketName08:
    Type: String
    Default: ""
  BucketName09:
    Type: String
    Default: ""
  BucketName10:
    Type: String
    Default: ""
  BucketName11:
    Type: String
    Default: ""
  BucketName12:
    Type: String
    Default: ""
  BucketName13:
    Type: String
    Default: ""
  BucketName14:
    Type: String
    Default: ""
  BucketName15:
    Type: String
    Default: ""
  BucketName16:
    Type: String
    Default: ""
  BucketName17:
    Type: String
    Default: ""
  BucketName18:
    Type: String
    Default: ""
  BucketName19:
    Type: String
    Default: ""
  BucketName20:
    Type: String
    Default: ""
Resources:
  Role1ABCC5F0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: MatanoMasterAccountId
                    - :root
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/Role/Resource
  BucketNotificationsHandlerServiceRoleF4216546:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotificationsHandler/ServiceRole/Resource
  BucketNotificationsHandlerServiceRoleDefaultPolicy8D8574E0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sns:CreateTopic
              - sns:AddPermission
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:GetEncryptionConfiguration
              - s3:List*
              - s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: 2012-10-17
      PolicyName: BucketNotificationsHandlerServiceRoleDefaultPolicy8D8574E0
      Roles:
        - Ref: BucketNotificationsHandlerServiceRoleF4216546
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotificationsHandler/ServiceRole/DefaultPolicy/Resource
  BucketNotificationsHandler2EE81290:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >-
          # (minified) Matano Custom Resource

          _C='already exists'

          _B='StackId'

          _A='TopicConfigurations'

          import boto3,json,logging,urllib.request

          from botocore.exceptions import ClientError

          s3=boto3.client('s3')

          sns=boto3.client('sns')

          iam=boto3.client('iam')

          EB_CONF='EventBridgeConfiguration'

          BNC='bucket notification configuration'

          CONF_TYPES=[_A,'QueueConfigurations','LambdaFunctionConfigurations']

          def find_region(bucket):A=s3.get_bucket_location(Bucket=bucket);return A['LocationConstraint']or'us-east-1'

          def find_kms(bucket):A=s3.get_bucket_encryption(Bucket=bucket);return A['ServerSideEncryptionConfiguration']['Rules'][0]['ApplyServerSideEncryptionByDefault'].get('KMSMasterKeyID')

          def handler(event,context):
          	L='Events';K='TopicArn';B=event;G='SUCCESS';H='';C='';I=''
          	try:
          		D=B['ResourceProperties'];A=D['BucketName']
          		if A:
          			M=find_region(A);N=B['RequestType'];J=D['MatanoMasterAccountId'];O=D['AccountId'];P=B[_B];Q=create_matano_sns_topic_if_not_exists(A,J,O,M);R={_A:[{K:Q,L:['s3:ObjectCreated:*']}]};E=handle(A,P,N,R);E=try_put_bucket_notif_conf(A,E);C=next(A[K]for A in E[_A][::-1]if any(A.startswith('s3:ObjectCreated')for A in A[L]))
          			try:sns.add_permission(TopicArn=C,Label='MatanoAutomationAccess',AWSAccountId=[J],ActionName=['Subscribe','ListSubscriptionsByTopic'])
          			except Exception as F:
          				if _C not in str(F):logging.exception('Failed to add permission to SNS topic')
          			I=find_kms(A)or''
          	except Exception as F:logging.exception(f"Failed to put {BNC}");G='FAILED';H=f"Error: {str(F)}. "
          	finally:submit_response(B,context,G,H,{'BucketNotificationsTopicArn':C,'BucketKmsKeyArn':I})
          def handle(bucket,stack_id,request_type,notif_conf):
          	E=stack_id;C=notif_conf;A=find_external_notifs(bucket,E)
          	if request_type=='Delete':return A
          	def F(notification):A=notification;A['Id']=f"{E}-{hash(json.dumps(A,sort_keys=True))}";return A
          	B={}
          	for D in CONF_TYPES:G=A.get(D,[]);H=[F(A)for A in C.get(D,[])];B[D]=G+H
          	if EB_CONF in C:B[EB_CONF]=C[EB_CONF]
          	elif EB_CONF in A:B[EB_CONF]=A[EB_CONF]
          	return B
          def find_external_notifs(bucket,stack_id):
          	A=get_bucket_notif_conf(bucket);B={}
          	for C in CONF_TYPES:B[C]=[A for A in A.get(C,[])if not A['Id'].startswith(f"{stack_id}-")]
          	if EB_CONF in A:B[EB_CONF]=A[EB_CONF]
          	return B
          def get_bucket_notif_conf(bucket):return s3.get_bucket_notification_configuration(Bucket=bucket)

          def try_put_bucket_notif_conf(bucket,notif_conf):
          	A=notif_conf
          	try:print(f"Putting {BNC}: ",A);s3.put_bucket_notification_configuration(Bucket=bucket,NotificationConfiguration=A)
          	except ClientError as B:
          		if'overlap'in str(B):A[_A]=A[_A][:-1]
          		else:raise
          	return A
          def submit_response(event,context,response_status,error_message,data=None):
          	G='RequestId';F='PhysicalResourceId';D='utf-8';C='LogicalResourceId';A=event;B={'Status':response_status,'Reason':f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",F:A.get(F)or A[C],_B:A[_B],G:A[G],C:A[C],'NoEcho':False}
          	if data:B['Data']=data
          	B=json.dumps(B).encode(D);print('Response body:\n'+B.decode(D));H={'content-type':'','content-length':str(len(B))}
          	try:
          		I=urllib.request.Request(url=A['ResponseURL'],headers=H,data=B,method='PUT')
          		with urllib.request.urlopen(I)as E:print(E.read().decode(D))
          		print('Status code: '+E.reason)
          	except Exception as J:print('send(..) failed executing request.urlopen(..): '+str(J))
          def create_matano_sns_topic_if_not_exists(bucket,master_account_id,account_id,region):
          	I='Allow';H='Resource';G='Action';F='Principal';E='Effect';D='Sid';B=region;J=boto3.client('sns',region_name=B);C='matano-s3-notifications';A=f"arn:aws:sns:{B}:{account_id}:{C}"
          	try:J.create_topic(Name=C,Attributes={'Policy':json.dumps({'Version':'2012-10-17','Statement':[{D:'0',E:I,F:{'Service':'s3.amazonaws.com'},G:'SNS:Publish',H:A,'Condition':{'ArnLike':{'aws:SourceArn':f"arn:aws:s3:::{bucket}"}}},{D:'GrantAutomationAccess',E:I,F:{'AWS':f"arn:aws:iam::{master_account_id}:root"},G:['SNS:Subscribe','SNS:ListSubscriptionsByTopic'],H:A}]})});print(f"Created topic {A}")
          	except Exception as K:
          		if _C not in str(K):raise
          		print(f"SNS topic {A} already exists w/ different attributes, skipping creation")
          	return A
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandlerServiceRoleF4216546
          - Arn
      Handler: index.handler
      Runtime: python3.9
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandlerServiceRoleDefaultPolicy8D8574E0
      - BucketNotificationsHandlerServiceRoleF4216546
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotificationsHandler/Resource
  BucketNotficationsAndSnsSetup01:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName01
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup01/Default
  BucketNotficationsAndSnsSetup02:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName02
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup02/Default
  BucketNotficationsAndSnsSetup03:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName03
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup03/Default
  BucketNotficationsAndSnsSetup04:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName04
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup04/Default
  BucketNotficationsAndSnsSetup05:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName05
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup05/Default
  BucketNotficationsAndSnsSetup06:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName06
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup06/Default
  BucketNotficationsAndSnsSetup07:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName07
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup07/Default
  BucketNotficationsAndSnsSetup08:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName08
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup08/Default
  BucketNotficationsAndSnsSetup09:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName09
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup09/Default
  BucketNotficationsAndSnsSetup10:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName10
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup10/Default
  BucketNotficationsAndSnsSetup11:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName11
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup11/Default
  BucketNotficationsAndSnsSetup12:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName12
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup12/Default
  BucketNotficationsAndSnsSetup13:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName13
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup13/Default
  BucketNotficationsAndSnsSetup14:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName14
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup14/Default
  BucketNotficationsAndSnsSetup15:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName15
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup15/Default
  BucketNotficationsAndSnsSetup16:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName16
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup16/Default
  BucketNotficationsAndSnsSetup17:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName17
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup17/Default
  BucketNotficationsAndSnsSetup18:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName18
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup18/Default
  BucketNotficationsAndSnsSetup19:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName19
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup19/Default
  BucketNotficationsAndSnsSetup20:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler2EE81290
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      BucketName:
        Ref: BucketName20
      AccountId:
        Ref: AWS::AccountId
      MatanoMasterAccountId:
        Ref: MatanoMasterAccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/BucketNotficationsAndSnsSetup20/Default
  RolePolicyHandlerServiceRoleFFDDDFB1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/RolePolicyHandler/ServiceRole/Resource
  RolePolicyHandlerServiceRoleDefaultPolicy431A4338:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:PutRolePolicy
              - iam:DeleteRolePolicy
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Role1ABCC5F0
                - Arn
        Version: 2012-10-17
      PolicyName: RolePolicyHandlerServiceRoleDefaultPolicy431A4338
      Roles:
        - Ref: RolePolicyHandlerServiceRoleFFDDDFB1
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/RolePolicyHandler/ServiceRole/DefaultPolicy/Resource
  RolePolicyHandlerC3A5A66C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >-
          import boto3, json, logging, urllib.request

          from botocore.exceptions import ClientError


          iam = boto3.client("iam")



          def handler(event, context):
              response_status = "SUCCESS"
              error_message = ""
              role_policy_doc = {}
              try:
                  maybe_buckets = json.loads(event["ResourceProperties"]["MaybeBuckets"])
                  role_arn = event["ResourceProperties"]["RoleArn"]
                  role_policy_doc = {
                      "Version": "2012-10-17",
                      "Statement": [
                          s for s in 
                          ({
                              "Sid": "AllowS3Access",
                              "Effect": "Allow",
                              "Action": ["s3:GetObject*", "s3:GetBucket*", "s3:List*"],
                              "Resource": list(
                                  set(
                                      [
                                          n
                                          for b in maybe_buckets
                                          for n in (
                                              f"arn:aws:s3:::{b['maybeBucketName']}",
                                              f"arn:aws:s3:::{b['maybeBucketName']}/*",
                                          )
                                          if b["maybeBucketName"]
                                      ]
                                  )
                              ),
                          },
                          {
                              "Sid": "AllowKmsAccess",
                              "Effect": "Allow",
                              "Action": ["kms:Decrypt", "kms:DescribeKey"],
                              "Resource": list(set([b["maybeKmsKeyArn"] for b in maybe_buckets if b["maybeKmsKeyArn"]])),
                          },
                          {
                              "Sid": "AllowSnsAccess",
                              "Effect": "Allow",
                              "Action": ["sns:Subscribe", "sns:Unsubscribe", "sns:ListSubscriptionsByTopic"],
                              "Resource": list(
                                  set([b["maybeNotificationsTopicArn"] for b in maybe_buckets if b["maybeNotificationsTopicArn"]])
                              ),
                          })
                          if s["Resource"]
                      ],
                  }

                  request_type = event["RequestType"]
                  if request_type == "Delete":
                      try:
                          iam.delete_role_policy(RoleName=role_arn.split("/")[-1], PolicyName="MatanoS3KmsSnsAccess")
                      except ClientError as e:
                          if "NoSuchEntity" in str(e):
                              pass
                          else:
                              raise e
                  else:
                      if role_policy_doc["Statement"]:         
                          iam.put_role_policy(
                              RoleName=role_arn.split("/")[-1],
                              PolicyName="MatanoS3KmsSnsAccess",
                              PolicyDocument=json.dumps(role_policy_doc),
                          )
              except Exception as e:
                  logging.exception("Failed to add role policy doc")
                  response_status = "FAILED"
                  error_message = f"Error: {str(e)}. "
              finally:
                  submit_response(
                      event, context, response_status, error_message, {"RolePolicyDocument": json.dumps(role_policy_doc)}
                  )


          def submit_response(event, context, response_status, error_message, data=None):
              response_body = {
                  "Status": response_status,
                  "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
                  "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
                  "StackId": event["StackId"],
                  "RequestId": event["RequestId"],
                  "LogicalResourceId": event["LogicalResourceId"],
                  "NoEcho": False,
              }
              if data:
                  response_body["Data"] = data

              response_body = json.dumps(response_body).encode("utf-8")
              print("Response body:\n" + response_body.decode("utf-8"))
              headers = {"content-type": "", "content-length": str(len(response_body))}
              try:
                  req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
                  with urllib.request.urlopen(req) as response:
                      print(response.read().decode("utf-8"))
                  print("Status code: " + response.reason)
              except Exception as e:
                  print("send(..) failed exec request.urlopen(..): " + str(e))
      Role:
        Fn::GetAtt:
          - RolePolicyHandlerServiceRoleFFDDDFB1
          - Arn
      Handler: index.handler
      Runtime: python3.9
      Timeout: 300
    DependsOn:
      - RolePolicyHandlerServiceRoleDefaultPolicy431A4338
      - RolePolicyHandlerServiceRoleFFDDDFB1
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/RolePolicyHandler/Resource
  RolePolicySetup:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - RolePolicyHandlerC3A5A66C
          - Arn
      ForceUpdate:
        Ref: ForceUpdate
      RoleArn:
        Fn::GetAtt:
          - Role1ABCC5F0
          - Arn
      AccountId:
        Ref: AWS::AccountId
      MaybeBuckets:
        Fn::Join:
          - ""
          - - '[{"bucketNum":"01","maybeBucketName":"'
            - Ref: BucketName01
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup01
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup01
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"02","maybeBucketName":"'
            - Ref: BucketName02
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup02
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup02
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"03","maybeBucketName":"'
            - Ref: BucketName03
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup03
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup03
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"04","maybeBucketName":"'
            - Ref: BucketName04
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup04
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup04
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"05","maybeBucketName":"'
            - Ref: BucketName05
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup05
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup05
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"06","maybeBucketName":"'
            - Ref: BucketName06
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup06
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup06
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"07","maybeBucketName":"'
            - Ref: BucketName07
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup07
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup07
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"08","maybeBucketName":"'
            - Ref: BucketName08
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup08
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup08
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"09","maybeBucketName":"'
            - Ref: BucketName09
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup09
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup09
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"10","maybeBucketName":"'
            - Ref: BucketName10
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup10
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup10
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"11","maybeBucketName":"'
            - Ref: BucketName11
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup11
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup11
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"12","maybeBucketName":"'
            - Ref: BucketName12
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup12
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup12
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"13","maybeBucketName":"'
            - Ref: BucketName13
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup13
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup13
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"14","maybeBucketName":"'
            - Ref: BucketName14
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup14
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup14
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"15","maybeBucketName":"'
            - Ref: BucketName15
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup15
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup15
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"16","maybeBucketName":"'
            - Ref: BucketName16
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup16
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup16
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"17","maybeBucketName":"'
            - Ref: BucketName17
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup17
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup17
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"18","maybeBucketName":"'
            - Ref: BucketName18
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup18
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup18
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"19","maybeBucketName":"'
            - Ref: BucketName19
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup19
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup19
                - BucketNotificationsTopicArn
            - '"},{"bucketNum":"20","maybeBucketName":"'
            - Ref: BucketName20
            - '","maybeKmsKeyArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup20
                - BucketKmsKeyArn
            - '","maybeNotificationsTopicArn":"'
            - Fn::GetAtt:
                - BucketNotficationsAndSnsSetup20
                - BucketNotificationsTopicArn
            - '"}]'
    DependsOn:
      - Role1ABCC5F0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MatanoCrossAccountS3Access/RolePolicySetup/Default
Outputs:
  RoleArn:
    Value:
      Fn::GetAtt:
        - Role1ABCC5F0
        - Arn
